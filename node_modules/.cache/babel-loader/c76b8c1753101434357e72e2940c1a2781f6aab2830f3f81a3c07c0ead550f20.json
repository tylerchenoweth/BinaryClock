{"ast":null,"code":"function convert_to_binary(decimalNumber) {\n  let formal_num = \"\";\n  let num = decimalNumber.toString(2);\n  for (let i = 0; i < 4 - num.length; i++) {\n    formal_num += \"0\";\n  }\n  formal_num += num;\n  return formal_num;\n}\nexport function getBinary(date_time) {\n  let hour = date_time.getHours();\n  let minute = date_time.getMinutes();\n  let second = date_time.getSeconds();\n  const map = new Map();\n  map.set(\"hour_tens\", convert_to_binary(Math.floor(hour / 10)));\n  map.set(\"hour_units\", convert_to_binary(Math.floor(hour % 10)));\n  map.set(\"minute_tens\", convert_to_binary(Math.floor(minute / 10)));\n  map.set(\"minute_units\", convert_to_binary(Math.floor(minute % 10)));\n  map.set(\"second_tens\", convert_to_binary(Math.floor(second / 10)));\n  map.set(\"second_units\", convert_to_binary(Math.floor(second % 10)));\n  return map;\n}","map":{"version":3,"names":["convert_to_binary","decimalNumber","formal_num","num","toString","i","length","getBinary","date_time","hour","getHours","minute","getMinutes","second","getSeconds","map","Map","set","Math","floor"],"sources":["/home/sh4ck1et0n/BinaryClock/src/utils/getBinary.js"],"sourcesContent":["function convert_to_binary(decimalNumber) {\n    let formal_num = \"\";\n    let num = decimalNumber.toString(2);\n\n    for(let i=0; i<(4-num.length); i++) {\n        formal_num += \"0\";\n    }\n    \n    formal_num += num;\n\n    return formal_num;\n}\n\nexport function getBinary(date_time) {\n\n    let hour = date_time.getHours();\n    let minute = date_time.getMinutes();\n    let second = date_time.getSeconds();\n\n    const map = new Map();\n\n    map.set(\"hour_tens\", convert_to_binary(Math.floor(hour/10)));\n    map.set(\"hour_units\", convert_to_binary(Math.floor(hour%10)));\n\n    map.set(\"minute_tens\", convert_to_binary(Math.floor(minute/10)));\n    map.set(\"minute_units\", convert_to_binary(Math.floor(minute%10)));\n\n    map.set(\"second_tens\", convert_to_binary(Math.floor(second/10)));\n    map.set(\"second_units\", convert_to_binary(Math.floor(second%10)));\n\n    return map;\n}"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,aAAa,EAAE;EACtC,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIC,GAAG,GAAGF,aAAa,CAACG,QAAQ,CAAC,CAAC,CAAC;EAEnC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAE,CAAC,GAACF,GAAG,CAACG,MAAO,EAAED,CAAC,EAAE,EAAE;IAChCH,UAAU,IAAI,GAAG;EACrB;EAEAA,UAAU,IAAIC,GAAG;EAEjB,OAAOD,UAAU;AACrB;AAEA,OAAO,SAASK,SAASA,CAACC,SAAS,EAAE;EAEjC,IAAIC,IAAI,GAAGD,SAAS,CAACE,QAAQ,CAAC,CAAC;EAC/B,IAAIC,MAAM,GAAGH,SAAS,CAACI,UAAU,CAAC,CAAC;EACnC,IAAIC,MAAM,GAAGL,SAAS,CAACM,UAAU,CAAC,CAAC;EAEnC,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EAErBD,GAAG,CAACE,GAAG,CAAC,WAAW,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACV,IAAI,GAAC,EAAE,CAAC,CAAC,CAAC;EAC5DM,GAAG,CAACE,GAAG,CAAC,YAAY,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACV,IAAI,GAAC,EAAE,CAAC,CAAC,CAAC;EAE7DM,GAAG,CAACE,GAAG,CAAC,aAAa,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACR,MAAM,GAAC,EAAE,CAAC,CAAC,CAAC;EAChEI,GAAG,CAACE,GAAG,CAAC,cAAc,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACR,MAAM,GAAC,EAAE,CAAC,CAAC,CAAC;EAEjEI,GAAG,CAACE,GAAG,CAAC,aAAa,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACN,MAAM,GAAC,EAAE,CAAC,CAAC,CAAC;EAChEE,GAAG,CAACE,GAAG,CAAC,cAAc,EAAEjB,iBAAiB,CAACkB,IAAI,CAACC,KAAK,CAACN,MAAM,GAAC,EAAE,CAAC,CAAC,CAAC;EAEjE,OAAOE,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}